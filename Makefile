##################################################################################################
# Makefile for building: big_sim
# Generated by qmake (2.01a) (Qt 4.8.7) on: Tue Mar 8 17:04:05 2022
# Modified by Sean Gallogly on Thurs Mar 10 18:33:00 2022
##################################################################################################


# ============================== GLOBAL VARIABLES AND OPTIONS ====================================

####### Global Variables

ROOT          = ./
BUILD_PATH    = $(ROOT)build/

####### Compiler, tools and options

# NOTE using update alternatives: to switch back to ver11, use update-alternatives --config g++
CXX              = g++
CXXFLAGS         = -m64 -pipe -std=c++14 -O3

MODULE_CXX_FLAGS = -m64 -pipe -std=c++14 -O3 -fPIC
INCPATH          = -I. -I$(ROOT)include/Big_Sim -I/usr/local/cuda/include -I$(ROOT)include/CBM_CORE_LIB -I$(ROOT)include/CBM_DATA_LIB \
                   -I$(ROOT)include/CBM_STATE_LIB -I$(ROOT)include/CBM_TOOLS_LIB -I$(ROOT)include/CBM_VIS_LIB -I$(ROOT)include/CXX_TOOLS_LIB 

INCPATH          += $(shell pkg-config --cflags gtk+-3.0)
LIBS             = -L/usr/local/cuda/lib64 -L/usr/lib64 -L/opt/cuda/lib64 -lcudart
LIBS            += $(shell pkg-config --libs gtk+-3.0)
LINK             = g++
LFLAGS           = -m64 -O3

CHK_DIR_EXISTS   = test -d
MKDIR            = mkdir -p
RMDIR            = rmdir

RM               = rm -rf

CHMOD_ALL        = chmod 777

# ===================================== FILES AND DIRECTORIES =====================================


####### Big Simulation Directories

BIG_SIM_SRC_PATH     = $(ROOT)src/Big_Sim/
BIG_SIM_INCLUDE_PATH = $(ROOT)include/Big_Sim/
BIG_SIM_OBJ_PATH     = $(BUILD_PATH)Big_Sim/


####### Big Simulation Files

BIG_SIM_SOURCES    = $(BIG_SIM_SRC_PATH)control.cpp \
		             $(BIG_SIM_SRC_PATH)main.cpp \

BIG_SIM_OBJECTS    = $(BIG_SIM_OBJ_PATH)control.o \
		             $(BIG_SIM_OBJ_PATH)main.o \


####### CBM Core Directories

CBM_CORE_SRC_PATH     = $(ROOT)src/CBM_CORE_LIB/
CBM_CORE_INCLUDE_PATH = $(ROOT)include/CBM_CORE_LIB/
CBM_CORE_OBJ_PATH     = $(BUILD_PATH)CBM_CORE_LIB/

####### CBM Core Files

CBM_CORE_SOURCES  = $(CBM_CORE_SRC_PATH)innetmodules/innet.cpp \
			        $(CBM_CORE_SRC_PATH)interface/cbmsimcore.cpp \
			        $(CBM_CORE_SRC_PATH)mzonemodules/mzone.cpp

CBM_CORE_OBJECTS  = $(CBM_CORE_OBJ_PATH)kernels_cuda.o \
                    $(CBM_CORE_OBJ_PATH)innet.o \
                    $(CBM_CORE_OBJ_PATH)cbmsimcore.o \
                    $(CBM_CORE_OBJ_PATH)mzone.o


####### CBM Data Directories

CBM_DATA_SRC_PATH     = $(ROOT)src/CBM_DATA_LIB/
CBM_DATA_INCLUDE_PATH = $(ROOT)include/CBM_DATA_LIB/
CBM_DATA_OBJ_PATH     = $(BUILD_PATH)CBM_DATA_LIB/

####### CBM Data Files

CBM_DATA_SOURCES  = $(CBM_DATA_SRC_PATH)interfaces/ectrialsdata.cpp \
			        $(CBM_DATA_SRC_PATH)interfaces/ispikeraster.cpp \
			        $(CBM_DATA_SRC_PATH)outdata/eyelidout.cpp \
			        $(CBM_DATA_SRC_PATH)outdata/rawuintdata.cpp \
			        $(CBM_DATA_SRC_PATH)peristimhist/peristimhist.cpp \
			        $(CBM_DATA_SRC_PATH)peristimhist/peristimhistfloat.cpp \
			        $(CBM_DATA_SRC_PATH)spikeraster/spikerasterbitarray.cpp

CBM_DATA_OBJECTS  = $(CBM_DATA_OBJ_PATH)ectrialsdata.o \
                    $(CBM_DATA_OBJ_PATH)ispikeraster.o \
                    $(CBM_DATA_OBJ_PATH)eyelidout.o \
                    $(CBM_DATA_OBJ_PATH)rawuintdata.o \
                    $(CBM_DATA_OBJ_PATH)peristimhist.o \
                    $(CBM_DATA_OBJ_PATH)peristimhistfloat.o \
                    $(CBM_DATA_OBJ_PATH)spikerasterbitarray.o


####### CBM State Directories

CBM_STATE_SRC_PATH     = $(ROOT)src/CBM_STATE_LIB/
CBM_STATE_INCLUDE_PATH = $(ROOT)include/CBM_STATE_LIB/
CBM_STATE_OBJ_PATH     = $(BUILD_PATH)CBM_STATE_LIB/

####### CBM State Files

CBM_STATE_SOURCES  = $(CBM_STATE_SRC_PATH)interfaces/cbmstate.cpp \
			         $(CBM_STATE_SRC_PATH)interfaces/imzoneactstate.cpp \
			         $(CBM_STATE_SRC_PATH)params/activityparams.cpp \
			         $(CBM_STATE_SRC_PATH)params/connectivityparams.cpp \
			         $(CBM_STATE_SRC_PATH)state/innetactivitystate.cpp \
			         $(CBM_STATE_SRC_PATH)state/innetconnectivitystate.cpp \
			         $(CBM_STATE_SRC_PATH)state/mzoneactivitystate.cpp \
			         $(CBM_STATE_SRC_PATH)state/mzoneconnectivitystate.cpp

CBM_STATE_OBJECTS  = $(CBM_STATE_OBJ_PATH)cbmstate.o \
                     $(CBM_STATE_OBJ_PATH)imzoneactstate.o \
                     $(CBM_STATE_OBJ_PATH)activityparams.o \
                     $(CBM_STATE_OBJ_PATH)connectivityparams.o \
                     $(CBM_STATE_OBJ_PATH)innetactivitystate.o \
                     $(CBM_STATE_OBJ_PATH)innetconnectivitystate.o \
                     $(CBM_STATE_OBJ_PATH)mzoneactivitystate.o \
                     $(CBM_STATE_OBJ_PATH)mzoneconnectivitystate.o

####### CBM Vis Directories

CBM_VIS_SRC_PATH     = $(ROOT)src/CBM_VIS_LIB/
CBM_VIS_INCLUDE_PATH = $(ROOT)include/CBM_VIS_LIB/ 
CBM_VIS_OBJ_PATH     = $(BUILD_PATH)CBM_VIS_LIB/

####### CBM Vis Files

CBM_VIS_SOURCES = $(CBM_VIS_SRC_PATH)gui.cpp

CBM_VIS_OBJECTS = $(CBM_VIS_OBJ_PATH)gui.o

####### CBM Tools Objects Directory

CBM_TOOLS_SRC_PATH     = $(ROOT)src/CBM_TOOLS_LIB/
CBM_TOOLS_INCLUDE_PATH = $(ROOT)include/CBM_TOOLS_LIB/
CBM_TOOLS_OBJ_PATH     = $(BUILD_PATH)CBM_TOOLS_LIB/

####### CBM Tools Files

CBM_TOOLS_SOURCES  = $(CBM_TOOLS_SRC_PATH)ecmfpopulation.cpp \
			         $(CBM_TOOLS_SRC_PATH)eyelidintegrator.cpp \
			         $(CBM_TOOLS_SRC_PATH)poissonregencells.cpp

CBM_TOOLS_OBJECTS  = $(CBM_TOOLS_OBJ_PATH)ecmfpopulation.o \
                     $(CBM_TOOLS_OBJ_PATH)eyelidintegrator.o \
                     $(CBM_TOOLS_OBJ_PATH)poissonregencells.o


####### CXX Tools Directories

CXX_TOOLS_SRC_PATH     = $(ROOT)src/CXX_TOOLS_LIB/
CXX_TOOLS_INCLUDE_PATH = $(ROOT)include/CXX_TOOLS_LIB/
CXX_TOOLS_OBJ_PATH     = $(BUILD_PATH)CXX_TOOLS_LIB/

####### CXX Tools Files

CXX_TOOLS_SOURCES  = $(CXX_TOOLS_SRC_PATH)commandLine/commandline.cpp \
					 $(CXX_TOOLS_SRC_PATH)fileIO/rawbytesrw.cpp \
					 $(CXX_TOOLS_SRC_PATH)fileIO/build_file.cpp \
					 $(CXX_TOOLS_SRC_PATH)fileIO/experiment_file.cpp \
					 $(CXX_TOOLS_SRC_PATH)memoryMgmt/arrayvalidate.cpp \
					 $(CXX_TOOLS_SRC_PATH)randGenerators/mersenne.cpp \
					 $(CXX_TOOLS_SRC_PATH)randGenerators/mother.cpp \
					 $(CXX_TOOLS_SRC_PATH)randGenerators/sfmt.cpp \
					 $(CXX_TOOLS_SRC_PATH)ttyManip/tty.cpp


CXX_TOOLS_OBJECTS  = $(CXX_TOOLS_OBJ_PATH)commandline.o \
					 $(CXX_TOOLS_OBJ_PATH)rawbytesrw.o \
					 $(CXX_TOOLS_OBJ_PATH)build_file.o \
					 $(CXX_TOOLS_OBJ_PATH)experiment_file.o \
					 $(CXX_TOOLS_OBJ_PATH)arrayvalidate.o \
					 $(CXX_TOOLS_OBJ_PATH)mersenne.o \
					 $(CXX_TOOLS_OBJ_PATH)mother.o \
					 $(CXX_TOOLS_OBJ_PATH)sfmt.o \
					 $(CXX_TOOLS_OBJ_PATH)tty.o


####### All Module Include Paths

MODULE_OBJ_PATHS = $(CBM_CORE_OBJ_PATH) $(CBM_DATA_OBJ_PATH) $(CBM_STATE_OBJ_PATH) \
					   $(CBM_TOOLS_OBJ_PATH) $(CBM_VIS_OBJ_PATH) $(CXX_TOOLS_OBJ_PATH)

####### Module Object Files

MODULE_OBJECTS = $(CBM_CORE_OBJECTS) $(CBM_DATA_OBJECTS) $(CBM_STATE_OBJECTS) \
				 $(CBM_TOOLS_OBJECTS) $(CBM_VIS_OBJECTS) $(CXX_TOOLS_OBJECTS)


# ================================= COMPILE AND LINK ALL =========================================


####### Target Name

TARGET = $(BUILD_PATH)big_sim

####### Check or create all object directories

first: $(MODULE_OBJ_PATHS) $(BIG_SIM_OBJ_PATH) finally

finally: all

####### Big Simulation Build rules

$(BIG_SIM_OBJ_PATH):
	@$(CHK_DIR_EXISTS) $(BIG_SIM_OBJ_PATH) || $(MKDIR) $(BIG_SIM_OBJ_PATH)

all: $(TARGET)

$(TARGET):  $(MODULE_OBJECTS) $(BIG_SIM_OBJECTS) 	
	$(LINK) $(LFLAGS) -o $(TARGET) $(MODULE_OBJECTS) $(BIG_SIM_OBJECTS) $(LIBS) 
	
####### Compile Big Simulation

$(BIG_SIM_OBJ_PATH)control.o: $(BIG_SIM_SRC_PATH)control.cpp $(BIG_SIM_INCLUDE_PATH)control.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $(BIG_SIM_OBJ_PATH)control.o $(BIG_SIM_SRC_PATH)control.cpp

$(BIG_SIM_OBJ_PATH)main.o: $(BIG_SIM_SRC_PATH)main.cpp $(BIG_SIM_INCLUDE_PATH)control.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $(BIG_SIM_OBJ_PATH)main.o $(BIG_SIM_SRC_PATH)main.cpp


# ====================================== COMPILE MODULES =========================================


####### CBM Core Compiler Options

CUDA_INCLUDE_PATH = /usr/local/cuda-11.7/include/
CBM_CORE_INCLUDES = -I. -I$(CUDA_INCLUDE_PATH) -I$(CBM_CORE_INCLUDE_PATH) \
					-I$(CBM_STATE_INCLUDE_PATH) -I$(CXX_TOOLS_INCLUDE_PATH) 

####### CBM Core Build Rules

$(CBM_CORE_OBJ_PATH):
	@$(CHK_DIR_EXISTS) $(CBM_CORE_OBJ_PATH) || $(MKDIR) $(CBM_CORE_OBJ_PATH)

####### Compile CBM Core Cuda Sources 

compiler_cuda_make_all: $(CBM_CORE_OBJ_PATH)kernels_cuda.o

$(CBM_CORE_OBJ_PATH)kernels_cuda.o: $(CBM_CORE_INCLUDE_PATH)cuda/kernels.h \
		$(CXX_TOOLS_INCLUDE_PATH)stdDefinitions/pstdint.h \
		$(CBM_CORE_INCLUDE_PATH)cuda/kernels.h \
		$(CBM_CORE_SRC_PATH)cuda/kernels.cu \
		$(CUDA_INCLUDE_PATH)cuda_runtime.h \
		$(CUDA_INCLUDE_PATH)crt/host_config.h \
		$(CUDA_INCLUDE_PATH)builtin_types.h \
		$(CUDA_INCLUDE_PATH)device_types.h \
		$(CUDA_INCLUDE_PATH)crt/host_defines.h \
		$(CUDA_INCLUDE_PATH)driver_types.h \
		$(CUDA_INCLUDE_PATH)vector_types.h \
		$(CUDA_INCLUDE_PATH)surface_types.h \
		$(CUDA_INCLUDE_PATH)texture_types.h \
		$(CUDA_INCLUDE_PATH)library_types.h \
		$(CUDA_INCLUDE_PATH)channel_descriptor.h \
		$(CUDA_INCLUDE_PATH)cuda_runtime_api.h \
		$(CUDA_INCLUDE_PATH)cuda_device_runtime_api.h \
		$(CUDA_INCLUDE_PATH)driver_functions.h \
		$(CUDA_INCLUDE_PATH)vector_functions.h \
		$(CUDA_INCLUDE_PATH)vector_functions.hpp \
		$(CUDA_INCLUDE_PATH)crt/common_functions.h \
		$(CUDA_INCLUDE_PATH)crt/math_functions.h \
		$(CUDA_INCLUDE_PATH)crt/math_functions.hpp \
		$(CUDA_INCLUDE_PATH)cuda_surface_types.h \
		$(CUDA_INCLUDE_PATH)cuda_texture_types.h \
		$(CUDA_INCLUDE_PATH)crt/device_functions.h \
		$(CUDA_INCLUDE_PATH)crt/device_functions.hpp \
		$(CUDA_INCLUDE_PATH)device_atomic_functions.h \
		$(CUDA_INCLUDE_PATH)device_atomic_functions.hpp \
		$(CUDA_INCLUDE_PATH)crt/device_double_functions.h \
		$(CUDA_INCLUDE_PATH)crt/device_double_functions.hpp \
		$(CUDA_INCLUDE_PATH)sm_20_atomic_functions.h \
		$(CUDA_INCLUDE_PATH)sm_20_atomic_functions.hpp \
		$(CUDA_INCLUDE_PATH)sm_32_atomic_functions.h \
		$(CUDA_INCLUDE_PATH)sm_32_atomic_functions.hpp \
		$(CUDA_INCLUDE_PATH)sm_35_atomic_functions.h \
		$(CUDA_INCLUDE_PATH)sm_60_atomic_functions.h \
		$(CUDA_INCLUDE_PATH)sm_60_atomic_functions.hpp \
		$(CUDA_INCLUDE_PATH)sm_20_intrinsics.h \
		$(CUDA_INCLUDE_PATH)sm_20_intrinsics.hpp \
		$(CUDA_INCLUDE_PATH)sm_30_intrinsics.h \
		$(CUDA_INCLUDE_PATH)sm_30_intrinsics.hpp \
		$(CUDA_INCLUDE_PATH)sm_32_intrinsics.h \
		$(CUDA_INCLUDE_PATH)sm_32_intrinsics.hpp \
		$(CUDA_INCLUDE_PATH)sm_35_intrinsics.h \
		$(CUDA_INCLUDE_PATH)sm_61_intrinsics.h \
		$(CUDA_INCLUDE_PATH)sm_61_intrinsics.hpp \
		$(CUDA_INCLUDE_PATH)crt/sm_70_rt.h \
		$(CUDA_INCLUDE_PATH)crt/sm_70_rt.hpp \
		$(CUDA_INCLUDE_PATH)surface_functions.h \
		$(CUDA_INCLUDE_PATH)texture_fetch_functions.h \
		$(CUDA_INCLUDE_PATH)texture_indirect_functions.h \
		$(CUDA_INCLUDE_PATH)surface_indirect_functions.h \
		$(CUDA_INCLUDE_PATH)device_launch_parameters.h \
		$(CUDA_INCLUDE_PATH)cuda.h \
		$(CUDA_INCLUDE_PATH)device_functions.h \
		$(CUDA_INCLUDE_PATH)crt/host_config.h \
		$(CUDA_INCLUDE_PATH)builtin_types.h \
		$(CUDA_INCLUDE_PATH)device_types.h \
		$(CUDA_INCLUDE_PATH)crt/host_defines.h \
		$(CUDA_INCLUDE_PATH)driver_types.h \
		$(CUDA_INCLUDE_PATH)vector_types.h \
		$(CUDA_INCLUDE_PATH)surface_types.h \
		$(CUDA_INCLUDE_PATH)texture_types.h \
		$(CUDA_INCLUDE_PATH)library_types.h \
		$(CUDA_INCLUDE_PATH)channel_descriptor.h \
		$(CUDA_INCLUDE_PATH)cuda_runtime_api.h \
		$(CUDA_INCLUDE_PATH)cuda_device_runtime_api.h \
		$(CUDA_INCLUDE_PATH)driver_functions.h \
		$(CUDA_INCLUDE_PATH)vector_functions.h \
		$(CUDA_INCLUDE_PATH)vector_functions.hpp \
		$(CUDA_INCLUDE_PATH)crt/device_functions.h \
		$(CUDA_INCLUDE_PATH)crt/device_functions.hpp \
		$(CUDA_INCLUDE_PATH)crt/device_double_functions.h \
		$(CUDA_INCLUDE_PATH)crt/device_double_functions.hpp \
		$(CUDA_INCLUDE_PATH)crt/sm_70_rt.h \
		$(CUDA_INCLUDE_PATH)crt/sm_70_rt.hpp \
		$(CUDA_INCLUDE_PATH)crt/common_functions.h \
		$(CUDA_INCLUDE_PATH)crt/math_functions.h \
		$(CUDA_INCLUDE_PATH)crt/math_functions.hpp \
		$(CUDA_INCLUDE_PATH)cuda_surface_types.h \
		$(CUDA_INCLUDE_PATH)cuda_texture_types.h \
		$(CUDA_INCLUDE_PATH)device_launch_parameters.h \
		$(CUDA_INCLUDE_PATH)device_types.h \
		$(CUDA_INCLUDE_PATH)crt/host_defines.h \
		$(CUDA_INCLUDE_PATH)driver_types.h \
		$(CUDA_INCLUDE_PATH)vector_types.h \
		$(CUDA_INCLUDE_PATH)surface_types.h \
		$(CUDA_INCLUDE_PATH)texture_types.h \
		$(CUDA_INCLUDE_PATH)crt/host_defines.h \
		$(CUDA_INCLUDE_PATH)crt/host_defines.h \
		$(CUDA_INCLUDE_PATH)vector_types.h \
		$(CUDA_INCLUDE_PATH)crt/host_defines.h \
		/usr/lib/gcc/x86_64-linux-gnu/9/include/syslimits.h \
		$(CUDA_INCLUDE_PATH)driver_types.h \
		$(CUDA_INCLUDE_PATH)crt/host_defines.h \
		$(CUDA_INCLUDE_PATH)vector_types.h \
		$(CUDA_INCLUDE_PATH)driver_types.h \
		$(CUDA_INCLUDE_PATH)crt/host_defines.h \
		$(CUDA_INCLUDE_PATH)vector_types.h \
		$(CUDA_INCLUDE_PATH)cuda_runtime_api.h \
		$(CUDA_INCLUDE_PATH)crt/host_defines.h \
		$(CUDA_INCLUDE_PATH)builtin_types.h \
		$(CUDA_INCLUDE_PATH)device_types.h \
		$(CUDA_INCLUDE_PATH)driver_types.h \
		$(CUDA_INCLUDE_PATH)vector_types.h \
		$(CUDA_INCLUDE_PATH)surface_types.h \
		$(CUDA_INCLUDE_PATH)texture_types.h \
		$(CUDA_INCLUDE_PATH)cuda_device_runtime_api.h \
		$(CUDA_INCLUDE_PATH)crt/host_defines.h \
		$(CUDA_INCLUDE_PATH)builtin_types.h \
		$(CUDA_INCLUDE_PATH)device_types.h \
		$(CUDA_INCLUDE_PATH)driver_types.h \
		$(CUDA_INCLUDE_PATH)vector_types.h \
		$(CUDA_INCLUDE_PATH)surface_types.h \
		$(CUDA_INCLUDE_PATH)texture_types.h \
		$(CUDA_INCLUDE_PATH)cuda_device_runtime_api.h \
		$(CUDA_INCLUDE_PATH)driver_types.h \
		$(CUDA_INCLUDE_PATH)crt/host_defines.h \
		$(CUDA_INCLUDE_PATH)vector_types.h \
		$(CUDA_INCLUDE_PATH)builtin_types.h \
		$(CUDA_INCLUDE_PATH)device_types.h \
		$(CUDA_INCLUDE_PATH)crt/host_defines.h \
		$(CUDA_INCLUDE_PATH)driver_types.h \
		$(CUDA_INCLUDE_PATH)vector_types.h \
		$(CUDA_INCLUDE_PATH)surface_types.h \
		$(CUDA_INCLUDE_PATH)texture_types.h \
		$(CUDA_INCLUDE_PATH)cuda_runtime_api.h \
		$(CUDA_INCLUDE_PATH)crt/host_defines.h \
		$(CUDA_INCLUDE_PATH)builtin_types.h \
		$(CUDA_INCLUDE_PATH)device_types.h \
		$(CUDA_INCLUDE_PATH)driver_types.h \
		$(CUDA_INCLUDE_PATH)vector_types.h \
		$(CUDA_INCLUDE_PATH)surface_types.h \
		$(CUDA_INCLUDE_PATH)texture_types.h \
		$(CUDA_INCLUDE_PATH)cuda_device_runtime_api.h \
		$(CUDA_INCLUDE_PATH)vector_functions.hpp \
		$(CUDA_INCLUDE_PATH)cuda_runtime_api.h \
		$(CUDA_INCLUDE_PATH)crt/host_defines.h \
		$(CUDA_INCLUDE_PATH)builtin_types.h \
		$(CUDA_INCLUDE_PATH)device_types.h \
		$(CUDA_INCLUDE_PATH)driver_types.h \
		$(CUDA_INCLUDE_PATH)vector_types.h \
		$(CUDA_INCLUDE_PATH)surface_types.h \
		$(CUDA_INCLUDE_PATH)texture_types.h \
		$(CUDA_INCLUDE_PATH)cuda_device_runtime_api.h \
		$(CUDA_INCLUDE_PATH)builtin_types.h \
		$(CUDA_INCLUDE_PATH)device_types.h \
		$(CUDA_INCLUDE_PATH)crt/host_defines.h \
		$(CUDA_INCLUDE_PATH)driver_types.h \
		$(CUDA_INCLUDE_PATH)vector_types.h \
		$(CUDA_INCLUDE_PATH)surface_types.h \
		$(CUDA_INCLUDE_PATH)texture_types.h \
		$(CUDA_INCLUDE_PATH)cuda_device_runtime_api.h \
		$(CUDA_INCLUDE_PATH)crt/math_functions.h \
		$(CUDA_INCLUDE_PATH)crt/math_functions.hpp \
		$(CUDA_INCLUDE_PATH)builtin_types.h \
		$(CUDA_INCLUDE_PATH)device_types.h \
		$(CUDA_INCLUDE_PATH)crt/host_defines.h \
		$(CUDA_INCLUDE_PATH)driver_types.h \
		$(CUDA_INCLUDE_PATH)vector_types.h \
		$(CUDA_INCLUDE_PATH)surface_types.h \
		$(CUDA_INCLUDE_PATH)texture_types.h \
		$(CUDA_INCLUDE_PATH)crt/math_functions.hpp \
		$(CUDA_INCLUDE_PATH)builtin_types.h \
		$(CUDA_INCLUDE_PATH)device_types.h \
		$(CUDA_INCLUDE_PATH)crt/host_defines.h \
		$(CUDA_INCLUDE_PATH)driver_types.h \
		$(CUDA_INCLUDE_PATH)vector_types.h \
		$(CUDA_INCLUDE_PATH)surface_types.h \
		$(CUDA_INCLUDE_PATH)texture_types.h \
		$(CUDA_INCLUDE_PATH)channel_descriptor.h \
		$(CUDA_INCLUDE_PATH)cuda_runtime_api.h \
		$(CUDA_INCLUDE_PATH)crt/host_defines.h \
		$(CUDA_INCLUDE_PATH)builtin_types.h \
		$(CUDA_INCLUDE_PATH)device_types.h \
		$(CUDA_INCLUDE_PATH)driver_types.h \
		$(CUDA_INCLUDE_PATH)vector_types.h \
		$(CUDA_INCLUDE_PATH)surface_types.h \
		$(CUDA_INCLUDE_PATH)texture_types.h \
		$(CUDA_INCLUDE_PATH)cuda_device_runtime_api.h \
		$(CUDA_INCLUDE_PATH)channel_descriptor.h \
		$(CUDA_INCLUDE_PATH)cuda_runtime_api.h \
		$(CUDA_INCLUDE_PATH)crt/host_defines.h \
		$(CUDA_INCLUDE_PATH)builtin_types.h \
		$(CUDA_INCLUDE_PATH)device_types.h \
		$(CUDA_INCLUDE_PATH)driver_types.h \
		$(CUDA_INCLUDE_PATH)vector_types.h \
		$(CUDA_INCLUDE_PATH)surface_types.h \
		$(CUDA_INCLUDE_PATH)texture_types.h \
		$(CUDA_INCLUDE_PATH)cuda_device_runtime_api.h \
		$(CUDA_INCLUDE_PATH)builtin_types.h \
		$(CUDA_INCLUDE_PATH)device_types.h \
		$(CUDA_INCLUDE_PATH)crt/host_defines.h \
		$(CUDA_INCLUDE_PATH)driver_types.h \
		$(CUDA_INCLUDE_PATH)vector_types.h \
		$(CUDA_INCLUDE_PATH)surface_types.h \
		$(CUDA_INCLUDE_PATH)texture_types.h \
		$(CUDA_INCLUDE_PATH)crt/device_functions.hpp \
		$(CUDA_INCLUDE_PATH)crt/device_double_functions.h \
		$(CUDA_INCLUDE_PATH)crt/device_double_functions.hpp \
		$(CUDA_INCLUDE_PATH)crt/sm_70_rt.h \
		$(CUDA_INCLUDE_PATH)crt/sm_70_rt.hpp \
		$(CUDA_INCLUDE_PATH)builtin_types.h \
		$(CUDA_INCLUDE_PATH)device_types.h \
		$(CUDA_INCLUDE_PATH)crt/host_defines.h \
		$(CUDA_INCLUDE_PATH)driver_types.h \
		$(CUDA_INCLUDE_PATH)vector_types.h \
		$(CUDA_INCLUDE_PATH)surface_types.h \
		$(CUDA_INCLUDE_PATH)texture_types.h \
		$(CUDA_INCLUDE_PATH)cuda_runtime_api.h \
		$(CUDA_INCLUDE_PATH)crt/host_defines.h \
		$(CUDA_INCLUDE_PATH)builtin_types.h \
		$(CUDA_INCLUDE_PATH)device_types.h \
		$(CUDA_INCLUDE_PATH)driver_types.h \
		$(CUDA_INCLUDE_PATH)vector_types.h \
		$(CUDA_INCLUDE_PATH)surface_types.h \
		$(CUDA_INCLUDE_PATH)texture_types.h \
		$(CUDA_INCLUDE_PATH)cuda_device_runtime_api.h \
		$(CUDA_INCLUDE_PATH)device_atomic_functions.hpp \
		$(CUDA_INCLUDE_PATH)cuda_runtime_api.h \
		$(CUDA_INCLUDE_PATH)crt/host_defines.h \
		$(CUDA_INCLUDE_PATH)builtin_types.h \
		$(CUDA_INCLUDE_PATH)device_types.h \
		$(CUDA_INCLUDE_PATH)driver_types.h \
		$(CUDA_INCLUDE_PATH)vector_types.h \
		$(CUDA_INCLUDE_PATH)surface_types.h \
		$(CUDA_INCLUDE_PATH)texture_types.h \
		$(CUDA_INCLUDE_PATH)cuda_device_runtime_api.h \
		$(CUDA_INCLUDE_PATH)builtin_types.h \
		$(CUDA_INCLUDE_PATH)device_types.h \
		$(CUDA_INCLUDE_PATH)crt/host_defines.h \
		$(CUDA_INCLUDE_PATH)driver_types.h \
		$(CUDA_INCLUDE_PATH)vector_types.h \
		$(CUDA_INCLUDE_PATH)surface_types.h \
		$(CUDA_INCLUDE_PATH)texture_types.h \
		$(CUDA_INCLUDE_PATH)crt/device_double_functions.hpp \
		$(CUDA_INCLUDE_PATH)builtin_types.h \
		$(CUDA_INCLUDE_PATH)device_types.h \
		$(CUDA_INCLUDE_PATH)crt/host_defines.h \
		$(CUDA_INCLUDE_PATH)driver_types.h \
		$(CUDA_INCLUDE_PATH)vector_types.h \
		$(CUDA_INCLUDE_PATH)surface_types.h \
		$(CUDA_INCLUDE_PATH)texture_types.h \
		$(CUDA_INCLUDE_PATH)cuda_runtime_api.h \
		$(CUDA_INCLUDE_PATH)crt/host_defines.h \
		$(CUDA_INCLUDE_PATH)builtin_types.h \
		$(CUDA_INCLUDE_PATH)device_types.h \
		$(CUDA_INCLUDE_PATH)driver_types.h \
		$(CUDA_INCLUDE_PATH)vector_types.h \
		$(CUDA_INCLUDE_PATH)surface_types.h \
		$(CUDA_INCLUDE_PATH)texture_types.h \
		$(CUDA_INCLUDE_PATH)cuda_device_runtime_api.h \
		$(CUDA_INCLUDE_PATH)sm_20_atomic_functions.hpp \
		$(CUDA_INCLUDE_PATH)cuda_runtime_api.h \
		$(CUDA_INCLUDE_PATH)crt/host_defines.h \
		$(CUDA_INCLUDE_PATH)builtin_types.h \
		$(CUDA_INCLUDE_PATH)device_types.h \
		$(CUDA_INCLUDE_PATH)driver_types.h \
		$(CUDA_INCLUDE_PATH)vector_types.h \
		$(CUDA_INCLUDE_PATH)surface_types.h \
		$(CUDA_INCLUDE_PATH)texture_types.h \
		$(CUDA_INCLUDE_PATH)cuda_device_runtime_api.h \
		$(CUDA_INCLUDE_PATH)cuda_runtime_api.h \
		$(CUDA_INCLUDE_PATH)crt/host_defines.h \
		$(CUDA_INCLUDE_PATH)builtin_types.h \
		$(CUDA_INCLUDE_PATH)device_types.h \
		$(CUDA_INCLUDE_PATH)driver_types.h \
		$(CUDA_INCLUDE_PATH)vector_types.h \
		$(CUDA_INCLUDE_PATH)surface_types.h \
		$(CUDA_INCLUDE_PATH)texture_types.h \
		$(CUDA_INCLUDE_PATH)cuda_device_runtime_api.h \
		$(CUDA_INCLUDE_PATH)sm_32_atomic_functions.hpp \
		$(CUDA_INCLUDE_PATH)cuda_runtime_api.h \
		$(CUDA_INCLUDE_PATH)crt/host_defines.h \
		$(CUDA_INCLUDE_PATH)builtin_types.h \
		$(CUDA_INCLUDE_PATH)device_types.h \
		$(CUDA_INCLUDE_PATH)driver_types.h \
		$(CUDA_INCLUDE_PATH)vector_types.h \
		$(CUDA_INCLUDE_PATH)surface_types.h \
		$(CUDA_INCLUDE_PATH)texture_types.h \
		$(CUDA_INCLUDE_PATH)cuda_device_runtime_api.h \
		$(CUDA_INCLUDE_PATH)sm_32_atomic_functions.h \
		$(CUDA_INCLUDE_PATH)cuda_runtime_api.h \
		$(CUDA_INCLUDE_PATH)crt/host_defines.h \
		$(CUDA_INCLUDE_PATH)builtin_types.h \
		$(CUDA_INCLUDE_PATH)device_types.h \
		$(CUDA_INCLUDE_PATH)driver_types.h \
		$(CUDA_INCLUDE_PATH)vector_types.h \
		$(CUDA_INCLUDE_PATH)surface_types.h \
		$(CUDA_INCLUDE_PATH)texture_types.h \
		$(CUDA_INCLUDE_PATH)cuda_device_runtime_api.h \
		$(CUDA_INCLUDE_PATH)sm_32_atomic_functions.hpp \
		$(CUDA_INCLUDE_PATH)cuda_runtime_api.h \
		$(CUDA_INCLUDE_PATH)crt/host_defines.h \
		$(CUDA_INCLUDE_PATH)builtin_types.h \
		$(CUDA_INCLUDE_PATH)device_types.h \
		$(CUDA_INCLUDE_PATH)driver_types.h \
		$(CUDA_INCLUDE_PATH)vector_types.h \
		$(CUDA_INCLUDE_PATH)surface_types.h \
		$(CUDA_INCLUDE_PATH)texture_types.h \
		$(CUDA_INCLUDE_PATH)cuda_device_runtime_api.h \
		$(CUDA_INCLUDE_PATH)sm_60_atomic_functions.hpp \
		$(CUDA_INCLUDE_PATH)cuda_runtime_api.h \
		$(CUDA_INCLUDE_PATH)crt/host_defines.h \
		$(CUDA_INCLUDE_PATH)builtin_types.h \
		$(CUDA_INCLUDE_PATH)device_types.h \
		$(CUDA_INCLUDE_PATH)driver_types.h \
		$(CUDA_INCLUDE_PATH)vector_types.h \
		$(CUDA_INCLUDE_PATH)surface_types.h \
		$(CUDA_INCLUDE_PATH)texture_types.h \
		$(CUDA_INCLUDE_PATH)cuda_device_runtime_api.h \
		$(CUDA_INCLUDE_PATH)cuda_runtime_api.h \
		$(CUDA_INCLUDE_PATH)crt/host_defines.h \
		$(CUDA_INCLUDE_PATH)builtin_types.h \
		$(CUDA_INCLUDE_PATH)device_types.h \
		$(CUDA_INCLUDE_PATH)driver_types.h \
		$(CUDA_INCLUDE_PATH)vector_types.h \
		$(CUDA_INCLUDE_PATH)surface_types.h \
		$(CUDA_INCLUDE_PATH)texture_types.h \
		$(CUDA_INCLUDE_PATH)cuda_device_runtime_api.h \
		$(CUDA_INCLUDE_PATH)sm_20_intrinsics.hpp \
		$(CUDA_INCLUDE_PATH)cuda_runtime_api.h \
		$(CUDA_INCLUDE_PATH)crt/host_defines.h \
		$(CUDA_INCLUDE_PATH)builtin_types.h \
		$(CUDA_INCLUDE_PATH)device_types.h \
		$(CUDA_INCLUDE_PATH)driver_types.h \
		$(CUDA_INCLUDE_PATH)vector_types.h \
		$(CUDA_INCLUDE_PATH)surface_types.h \
		$(CUDA_INCLUDE_PATH)texture_types.h \
		$(CUDA_INCLUDE_PATH)cuda_device_runtime_api.h \
		$(CUDA_INCLUDE_PATH)cuda_runtime_api.h \
		$(CUDA_INCLUDE_PATH)crt/host_defines.h \
		$(CUDA_INCLUDE_PATH)builtin_types.h \
		$(CUDA_INCLUDE_PATH)device_types.h \
		$(CUDA_INCLUDE_PATH)driver_types.h \
		$(CUDA_INCLUDE_PATH)vector_types.h \
		$(CUDA_INCLUDE_PATH)surface_types.h \
		$(CUDA_INCLUDE_PATH)texture_types.h \
		$(CUDA_INCLUDE_PATH)cuda_device_runtime_api.h \
		$(CUDA_INCLUDE_PATH)sm_30_intrinsics.hpp \
		$(CUDA_INCLUDE_PATH)cuda_runtime_api.h \
		$(CUDA_INCLUDE_PATH)crt/host_defines.h \
		$(CUDA_INCLUDE_PATH)builtin_types.h \
		$(CUDA_INCLUDE_PATH)device_types.h \
		$(CUDA_INCLUDE_PATH)driver_types.h \
		$(CUDA_INCLUDE_PATH)vector_types.h \
		$(CUDA_INCLUDE_PATH)surface_types.h \
		$(CUDA_INCLUDE_PATH)texture_types.h \
		$(CUDA_INCLUDE_PATH)cuda_device_runtime_api.h \
		$(CUDA_INCLUDE_PATH)cuda_runtime_api.h \
		$(CUDA_INCLUDE_PATH)crt/host_defines.h \
		$(CUDA_INCLUDE_PATH)builtin_types.h \
		$(CUDA_INCLUDE_PATH)device_types.h \
		$(CUDA_INCLUDE_PATH)driver_types.h \
		$(CUDA_INCLUDE_PATH)vector_types.h \
		$(CUDA_INCLUDE_PATH)surface_types.h \
		$(CUDA_INCLUDE_PATH)texture_types.h \
		$(CUDA_INCLUDE_PATH)cuda_device_runtime_api.h \
		$(CUDA_INCLUDE_PATH)sm_32_intrinsics.hpp \
		$(CUDA_INCLUDE_PATH)cuda_runtime_api.h \
		$(CUDA_INCLUDE_PATH)crt/host_defines.h \
		$(CUDA_INCLUDE_PATH)builtin_types.h \
		$(CUDA_INCLUDE_PATH)device_types.h \
		$(CUDA_INCLUDE_PATH)driver_types.h \
		$(CUDA_INCLUDE_PATH)vector_types.h \
		$(CUDA_INCLUDE_PATH)surface_types.h \
		$(CUDA_INCLUDE_PATH)texture_types.h \
		$(CUDA_INCLUDE_PATH)cuda_device_runtime_api.h \
		$(CUDA_INCLUDE_PATH)sm_32_intrinsics.h \
		$(CUDA_INCLUDE_PATH)cuda_runtime_api.h \
		$(CUDA_INCLUDE_PATH)crt/host_defines.h \
		$(CUDA_INCLUDE_PATH)builtin_types.h \
		$(CUDA_INCLUDE_PATH)device_types.h \
		$(CUDA_INCLUDE_PATH)driver_types.h \
		$(CUDA_INCLUDE_PATH)vector_types.h \
		$(CUDA_INCLUDE_PATH)surface_types.h \
		$(CUDA_INCLUDE_PATH)texture_types.h \
		$(CUDA_INCLUDE_PATH)cuda_device_runtime_api.h \
		$(CUDA_INCLUDE_PATH)sm_32_intrinsics.hpp \
		$(CUDA_INCLUDE_PATH)cuda_runtime_api.h \
		$(CUDA_INCLUDE_PATH)crt/host_defines.h \
		$(CUDA_INCLUDE_PATH)builtin_types.h \
		$(CUDA_INCLUDE_PATH)device_types.h \
		$(CUDA_INCLUDE_PATH)driver_types.h \
		$(CUDA_INCLUDE_PATH)vector_types.h \
		$(CUDA_INCLUDE_PATH)surface_types.h \
		$(CUDA_INCLUDE_PATH)texture_types.h \
		$(CUDA_INCLUDE_PATH)cuda_device_runtime_api.h \
		$(CUDA_INCLUDE_PATH)sm_61_intrinsics.hpp \
		$(CUDA_INCLUDE_PATH)cuda_runtime_api.h \
		$(CUDA_INCLUDE_PATH)crt/host_defines.h \
		$(CUDA_INCLUDE_PATH)builtin_types.h \
		$(CUDA_INCLUDE_PATH)device_types.h \
		$(CUDA_INCLUDE_PATH)driver_types.h \
		$(CUDA_INCLUDE_PATH)vector_types.h \
		$(CUDA_INCLUDE_PATH)surface_types.h \
		$(CUDA_INCLUDE_PATH)texture_types.h \
		$(CUDA_INCLUDE_PATH)cuda_device_runtime_api.h \
		$(CUDA_INCLUDE_PATH)builtin_types.h \
		$(CUDA_INCLUDE_PATH)device_types.h \
		$(CUDA_INCLUDE_PATH)crt/host_defines.h \
		$(CUDA_INCLUDE_PATH)driver_types.h \
		$(CUDA_INCLUDE_PATH)vector_types.h \
		$(CUDA_INCLUDE_PATH)surface_types.h \
		$(CUDA_INCLUDE_PATH)texture_types.h \
		$(CUDA_INCLUDE_PATH)crt/sm_70_rt.hpp \
		$(CUDA_INCLUDE_PATH)builtin_types.h \
		$(CUDA_INCLUDE_PATH)device_types.h \
		$(CUDA_INCLUDE_PATH)crt/host_defines.h \
		$(CUDA_INCLUDE_PATH)driver_types.h \
		$(CUDA_INCLUDE_PATH)vector_types.h \
		$(CUDA_INCLUDE_PATH)surface_types.h \
		$(CUDA_INCLUDE_PATH)texture_types.h \
		$(CUDA_INCLUDE_PATH)cuda_runtime_api.h \
		$(CUDA_INCLUDE_PATH)crt/host_defines.h \
		$(CUDA_INCLUDE_PATH)builtin_types.h \
		$(CUDA_INCLUDE_PATH)device_types.h \
		$(CUDA_INCLUDE_PATH)driver_types.h \
		$(CUDA_INCLUDE_PATH)vector_types.h \
		$(CUDA_INCLUDE_PATH)surface_types.h \
		$(CUDA_INCLUDE_PATH)texture_types.h \
		$(CUDA_INCLUDE_PATH)cuda_device_runtime_api.h \
		$(CUDA_INCLUDE_PATH)cuda_surface_types.h \
		$(CUDA_INCLUDE_PATH)channel_descriptor.h \
		$(CUDA_INCLUDE_PATH)cuda_runtime_api.h \
		$(CUDA_INCLUDE_PATH)crt/host_defines.h \
		$(CUDA_INCLUDE_PATH)builtin_types.h \
		$(CUDA_INCLUDE_PATH)device_types.h \
		$(CUDA_INCLUDE_PATH)driver_types.h \
		$(CUDA_INCLUDE_PATH)vector_types.h \
		$(CUDA_INCLUDE_PATH)surface_types.h \
		$(CUDA_INCLUDE_PATH)texture_types.h \
		$(CUDA_INCLUDE_PATH)cuda_device_runtime_api.h \
		$(CUDA_INCLUDE_PATH)cuda_texture_types.h \
		$(CUDA_INCLUDE_PATH)channel_descriptor.h \
		$(CUDA_INCLUDE_PATH)cuda_runtime_api.h \
		$(CUDA_INCLUDE_PATH)crt/host_defines.h \
		$(CUDA_INCLUDE_PATH)builtin_types.h \
		$(CUDA_INCLUDE_PATH)device_types.h \
		$(CUDA_INCLUDE_PATH)driver_types.h \
		$(CUDA_INCLUDE_PATH)vector_types.h \
		$(CUDA_INCLUDE_PATH)surface_types.h \
		$(CUDA_INCLUDE_PATH)texture_types.h \
		$(CUDA_INCLUDE_PATH)cuda_device_runtime_api.h \
		$(CUDA_INCLUDE_PATH)cuda_runtime_api.h \
		$(CUDA_INCLUDE_PATH)crt/host_defines.h \
		$(CUDA_INCLUDE_PATH)builtin_types.h \
		$(CUDA_INCLUDE_PATH)device_types.h \
		$(CUDA_INCLUDE_PATH)driver_types.h \
		$(CUDA_INCLUDE_PATH)vector_types.h \
		$(CUDA_INCLUDE_PATH)surface_types.h \
		$(CUDA_INCLUDE_PATH)texture_types.h \
		$(CUDA_INCLUDE_PATH)cuda_device_runtime_api.h \
		$(CUDA_INCLUDE_PATH)vector_types.h \
		$(CUDA_INCLUDE_PATH)crt/host_defines.h \
		$(CUDA_INCLUDE_PATH)crt/device_functions.h \
		$(CUDA_INCLUDE_PATH)builtin_types.h \
		$(CUDA_INCLUDE_PATH)device_types.h \
		$(CUDA_INCLUDE_PATH)crt/host_defines.h \
		$(CUDA_INCLUDE_PATH)driver_types.h \
		$(CUDA_INCLUDE_PATH)vector_types.h \
		$(CUDA_INCLUDE_PATH)surface_types.h \
		$(CUDA_INCLUDE_PATH)texture_types.h \
		$(CUDA_INCLUDE_PATH)crt/device_functions.hpp \
		$(CUDA_INCLUDE_PATH)crt/device_double_functions.h \
		$(CUDA_INCLUDE_PATH)crt/device_double_functions.hpp \
		$(CUDA_INCLUDE_PATH)crt/sm_70_rt.h \
		$(CUDA_INCLUDE_PATH)crt/sm_70_rt.hpp
	nvcc -O3 -arch=compute_61 -Xcompiler -fPIC $(CBM_CORE_INCLUDES) -c $(CBM_CORE_SRC_PATH)cuda/kernels.cu -o $(CBM_CORE_OBJ_PATH)kernels_cuda.o

####### compile CBM Core Non-Cuda Sources

$(CBM_CORE_OBJ_PATH)innet.o: $(CBM_CORE_SRC_PATH)innetmodules/innet.cpp $(CBM_CORE_INCLUDE_PATH)innetmodules/innet.h \
                             $(CBM_CORE_INCLUDE_PATH)cuda/kernels.h
	$(CXX) -c $(MODULE_CXX_FLAGS) $(CBM_CORE_INCLUDES) -o $(CBM_CORE_OBJ_PATH)innet.o $(CBM_CORE_SRC_PATH)innetmodules/innet.cpp
 
$(CBM_CORE_OBJ_PATH)cbmsimcore.o: $(CBM_CORE_SRC_PATH)interface/cbmsimcore.cpp $(CBM_CORE_INCLUDE_PATH)interface/cbmsimcore.h \
                                  $(CBM_CORE_INCLUDE_PATH)mzonemodules/mzone.h \
                                  $(CBM_CORE_INCLUDE_PATH)cuda/kernels.h \
                                  $(CBM_CORE_INCLUDE_PATH)innetmodules/innet.h
	$(CXX) -c $(MODULE_CXX_FLAGS) $(CBM_CORE_INCLUDES) -o $(CBM_CORE_OBJ_PATH)cbmsimcore.o $(CBM_CORE_SRC_PATH)interface/cbmsimcore.cpp
  
$(CBM_CORE_OBJ_PATH)mzone.o: $(CBM_CORE_SRC_PATH)mzonemodules/mzone.cpp $(CBM_CORE_INCLUDE_PATH)mzonemodules/mzone.h \
                             $(CBM_CORE_INCLUDE_PATH)cuda/kernels.h
	$(CXX) -c $(MODULE_CXX_FLAGS) $(CBM_CORE_INCLUDES) -o $(CBM_CORE_OBJ_PATH)mzone.o $(CBM_CORE_SRC_PATH)mzonemodules/mzone.cpp


####### CBM Data Compiler Options

CBM_DATA_INCLUDES = -I. -I$(BIG_SIM_INCLUDE_PATH) -I$(CBM_DATA_INCLUDE_PATH) -I$(CXX_TOOLS_INCLUDE_PATH) 

####### CBM Data Build Rules

$(CBM_DATA_OBJ_PATH):
	@$(CHK_DIR_EXISTS) $(CBM_DATA_OBJ_PATH) || $(MKDIR) $(CBM_DATA_OBJ_PATH)

####### Compile CBM Data Sources 

$(CBM_DATA_OBJ_PATH)ectrialsdata.o: $(CBM_DATA_SRC_PATH)interfaces/ectrialsdata.cpp $(CBM_DATA_INCLUDE_PATH)interfaces/ectrialsdata.h \
                                    $(CBM_DATA_INCLUDE_PATH)outdata/eyelidout.h \
                                    $(CBM_DATA_INCLUDE_PATH)outdata/rawuintdata.h \
                                    $(CBM_DATA_INCLUDE_PATH)spikeraster/spikerasterbitarray.h \
                                    $(CBM_DATA_INCLUDE_PATH)interfaces/ispikeraster.h \
                                    $(CBM_DATA_INCLUDE_PATH)peristimhist/peristimhist.h \
                                    $(CBM_DATA_INCLUDE_PATH)peristimhist/peristimhistfloat.h
	$(CXX) -c $(MODULE_CXX_FLAGS) $(CBM_DATA_INCLUDES) -o $(CBM_DATA_OBJ_PATH)ectrialsdata.o $(CBM_DATA_SRC_PATH)interfaces/ectrialsdata.cpp
	
$(CBM_DATA_OBJ_PATH)ispikeraster.o: $(CBM_DATA_SRC_PATH)interfaces/ispikeraster.cpp $(CBM_DATA_INCLUDE_PATH)interfaces/ispikeraster.h
	$(CXX) -c $(MODULE_CXX_FLAGS) $(CBM_DATA_INCLUDES) -o $(CBM_DATA_OBJ_PATH)ispikeraster.o $(CBM_DATA_SRC_PATH)interfaces/ispikeraster.cpp
  
$(CBM_DATA_OBJ_PATH)eyelidout.o: $(CBM_DATA_SRC_PATH)outdata/eyelidout.cpp $(CBM_DATA_INCLUDE_PATH)outdata/eyelidout.h
	$(CXX) -c $(MODULE_CXX_FLAGS) $(CBM_DATA_INCLUDES) -o $(CBM_DATA_OBJ_PATH)eyelidout.o $(CBM_DATA_SRC_PATH)outdata/eyelidout.cpp
  
$(CBM_DATA_OBJ_PATH)rawuintdata.o: $(CBM_DATA_SRC_PATH)outdata/rawuintdata.cpp $(CBM_DATA_INCLUDE_PATH)outdata/rawuintdata.h
	$(CXX) -c $(MODULE_CXX_FLAGS) $(CBM_DATA_INCLUDES) -o $(CBM_DATA_OBJ_PATH)rawuintdata.o $(CBM_DATA_SRC_PATH)outdata/rawuintdata.cpp
  
$(CBM_DATA_OBJ_PATH)peristimhist.o: $(CBM_DATA_SRC_PATH)peristimhist/peristimhist.cpp $(CBM_DATA_INCLUDE_PATH)peristimhist/peristimhist.h
	$(CXX) -c $(MODULE_CXX_FLAGS) $(CBM_DATA_INCLUDES) -o $(CBM_DATA_OBJ_PATH)peristimhist.o $(CBM_DATA_SRC_PATH)peristimhist/peristimhist.cpp
  
2 $(CBM_DATA_OBJ_PATH)peristimhistfloat.o: $(CBM_DATA_SRC_PATH)peristimhist/peristimhistfloat.cpp $(CBM_DATA_INCLUDE_PATH)peristimhist/peristimhistfloat.h
	$(CXX) -c $(MODULE_CXX_FLAGS) $(CBM_DATA_INCLUDES) -o $(CBM_DATA_OBJ_PATH)peristimhistfloat.o $(CBM_DATA_SRC_PATH)peristimhist/peristimhistfloat.cpp
  
$(CBM_DATA_OBJ_PATH)spikerasterbitarray.o: $(CBM_DATA_SRC_PATH)spikeraster/spikerasterbitarray.cpp $(CBM_DATA_INCLUDE_PATH)spikeraster/spikerasterbitarray.h \
                                           $(CBM_DATA_INCLUDE_PATH)interfaces/ispikeraster.h
	$(CXX) -c $(MODULE_CXX_FLAGS) $(CBM_DATA_INCLUDES) -o $(CBM_DATA_OBJ_PATH)spikerasterbitarray.o $(CBM_DATA_SRC_PATH)spikeraster/spikerasterbitarray.cpp


####### CBM State Compiler Options

CBM_STATE_INCLUDES = -I. -I$(CBM_STATE_INCLUDE_PATH) -I$(CXX_TOOLS_INCLUDE_PATH)

####### CBM State Build Rules

$(CBM_STATE_OBJ_PATH):
	@$(CHK_DIR_EXISTS) $(CBM_STATE_OBJ_PATH) || $(MKDIR) $(CBM_STATE_OBJ_PATH)

####### Compile CBM State Sources

$(CBM_STATE_OBJ_PATH)cbmstate.o: $(CBM_STATE_SRC_PATH)interfaces/cbmstate.cpp $(CBM_STATE_INCLUDE_PATH)interfaces/cbmstate.h \
		$(CBM_STATE_INCLUDE_PATH)params/activityparams.h \
		$(CBM_STATE_INCLUDE_PATH)params/connectivityparams.h \
		$(CBM_STATE_INCLUDE_PATH)state/innetconnectivitystate.h \
		$(CBM_STATE_INCLUDE_PATH)state/mzoneconnectivitystate.h \
		$(CBM_STATE_INCLUDE_PATH)state/innetactivitystate.h \
		$(CBM_STATE_INCLUDE_PATH)state/mzoneactivitystate.h \
		$(CBM_STATE_INCLUDE_PATH)interfaces/imzoneactstate.h
	$(CXX) -c $(MODULE_CXX_FLAGS) $(CBM_STATE_INCLUDES) -o $(CBM_STATE_OBJ_PATH)cbmstate.o $(CBM_STATE_SRC_PATH)interfaces/cbmstate.cpp

$(CBM_STATE_OBJ_PATH)imzoneactstate.o: $(CBM_STATE_SRC_PATH)interfaces/imzoneactstate.cpp $(CBM_STATE_INCLUDE_PATH)interfaces/imzoneactstate.h
	$(CXX) -c $(MODULE_CXX_FLAGS) $(CBM_STATE_INCLUDES) -o $(CBM_STATE_OBJ_PATH)imzoneactstate.o $(CBM_STATE_SRC_PATH)interfaces/imzoneactstate.cpp

$(CBM_STATE_OBJ_PATH)activityparams.o: $(CBM_STATE_SRC_PATH)params/activityparams.cpp $(CBM_STATE_INCLUDE_PATH)params/activityparams.h
	$(CXX) -c $(MODULE_CXX_FLAGS) $(CBM_STATE_INCLUDES) -o $(CBM_STATE_OBJ_PATH)activityparams.o $(CBM_STATE_SRC_PATH)params/activityparams.cpp

$(CBM_STATE_OBJ_PATH)connectivityparams.o: $(CBM_STATE_SRC_PATH)params/connectivityparams.cpp $(CBM_STATE_INCLUDE_PATH)params/connectivityparams.h
	$(CXX) -c $(MODULE_CXX_FLAGS) $(CBM_STATE_INCLUDES) -o $(CBM_STATE_OBJ_PATH)connectivityparams.o $(CBM_STATE_SRC_PATH)params/connectivityparams.cpp

$(CBM_STATE_OBJ_PATH)innetactivitystate.o: $(CBM_STATE_SRC_PATH)state/innetactivitystate.cpp $(CBM_STATE_INCLUDE_PATH)state/innetactivitystate.h \
		                                   $(CBM_STATE_INCLUDE_PATH)params/connectivityparams.h \
		                                   $(CBM_STATE_INCLUDE_PATH)params/activityparams.h \
		                                   $(CBM_STATE_INCLUDE_PATH)state/innetconnectivitystate.h
	$(CXX) -c $(MODULE_CXX_FLAGS) $(CBM_STATE_INCLUDES) -o $(CBM_STATE_OBJ_PATH)innetactivitystate.o $(CBM_STATE_SRC_PATH)state/innetactivitystate.cpp

$(CBM_STATE_OBJ_PATH)innetconnectivitystate.o: $(CBM_STATE_SRC_PATH)state/innetconnectivitystate.cpp $(CBM_STATE_INCLUDE_PATH)state/innetconnectivitystate.h \
		                                       $(CBM_STATE_INCLUDE_PATH)params/connectivityparams.h
	$(CXX) -c $(MODULE_CXX_FLAGS) $(CBM_STATE_INCLUDES) -o $(CBM_STATE_OBJ_PATH)innetconnectivitystate.o $(CBM_STATE_SRC_PATH)state/innetconnectivitystate.cpp

$(CBM_STATE_OBJ_PATH)mzoneactivitystate.o: $(CBM_STATE_SRC_PATH)state/mzoneactivitystate.cpp $(CBM_STATE_INCLUDE_PATH)state/mzoneactivitystate.h \
		                                   $(CBM_STATE_INCLUDE_PATH)params/connectivityparams.h \
		                                   $(CBM_STATE_INCLUDE_PATH)params/activityparams.h \
		                                   $(CBM_STATE_INCLUDE_PATH)interfaces/imzoneactstate.h
	$(CXX) -c $(MODULE_CXX_FLAGS) $(CBM_STATE_INCLUDES) -o $(CBM_STATE_OBJ_PATH)mzoneactivitystate.o $(CBM_STATE_SRC_PATH)state/mzoneactivitystate.cpp

$(CBM_STATE_OBJ_PATH)mzoneconnectivitystate.o: $(CBM_STATE_SRC_PATH)state/mzoneconnectivitystate.cpp $(CBM_STATE_INCLUDE_PATH)state/mzoneconnectivitystate.h \
		                                       $(CBM_STATE_INCLUDE_PATH)params/connectivityparams.h
	$(CXX) -c $(MODULE_CXX_FLAGS) $(CBM_STATE_INCLUDES) -o $(CBM_STATE_OBJ_PATH)mzoneconnectivitystate.o $(CBM_STATE_SRC_PATH)state/mzoneconnectivitystate.cpp


####### CBM Tools Compiler Options

CBM_TOOLS_INCLUDES = -I. -I$(CBM_STATE_INCLUDE_PATH) -I$(CUDA_INCLUDE_PATH) -I$(CBM_CORE_INCLUDE_PATH) -I$(CBM_TOOLS_INCLUDE_PATH) -I$(CXX_TOOLS_INCLUDE_PATH)

####### CBM Tools Build Rules

$(CBM_TOOLS_OBJ_PATH):
	@$(CHK_DIR_EXISTS) $(CBM_TOOLS_OBJ_PATH) || $(MKDIR) $(CBM_TOOLS_OBJ_PATH)

####### Compile CBM Tools Sources

$(CBM_TOOLS_OBJ_PATH)ecmfpopulation.o: $(CBM_TOOLS_SRC_PATH)ecmfpopulation.cpp $(CBM_TOOLS_INCLUDE_PATH)/ecmfpopulation.h
	$(CXX) -c $(MODULE_CXX_FLAGS) $(CBM_TOOLS_INCLUDES) -o $(CBM_TOOLS_OBJ_PATH)ecmfpopulation.o $(CBM_TOOLS_SRC_PATH)ecmfpopulation.cpp

$(CBM_TOOLS_OBJ_PATH)eyelidintegrator.o: $(CBM_TOOLS_SRC_PATH)eyelidintegrator.cpp $(CBM_TOOLS_INCLUDE_PATH)/eyelidintegrator.h
	$(CXX) -c $(MODULE_CXX_FLAGS) $(CBM_TOOLS_INCLUDES) -o $(CBM_TOOLS_OBJ_PATH)eyelidintegrator.o $(CBM_TOOLS_SRC_PATH)eyelidintegrator.cpp

$(CBM_TOOLS_OBJ_PATH)poissonregencells.o: $(CBM_TOOLS_SRC_PATH)poissonregencells.cpp $(CBM_TOOLS_INCLUDE_PATH)/poissonregencells.h
	$(CXX) -c $(MODULE_CXX_FLAGS) $(CBM_TOOLS_INCLUDES) -o $(CBM_TOOLS_OBJ_PATH)poissonregencells.o $(CBM_TOOLS_SRC_PATH)poissonregencells.cpp

####### CBM Vis Compiler Options

# FIXME: the invocation of pkg-config is redundant
CBM_VIS_INCLUDES = -I. -I$(CBM_VIS_INCLUDE_PATH) -I$(CXX_TOOLS_INCLUDE_PATH) -I$(BIG_SIM_INCLUDE_PATH) \
				   -I$(CBM_STATE_INCLUDE_PATH) -I$(CBM_CORE_INCLUDE_PATH) -I$(CUDA_INCLUDE_PATH) \
				   -I$(CBM_TOOLS_INCLUDE_PATH) -I$(CBM_DATA_INCLUDE_PATH) $(shell pkg-config --cflags gtk+-3.0)

####### CBM Vis Build Rules

$(CBM_VIS_OBJ_PATH):
	@$(CHK_DIR_EXISTS) $(CBM_VIS_OBJ_PATH) || $(MKDIR) $(CBM_VIS_OBJ_PATH)

####### Compile CBM Vis Sources

$(CBM_VIS_OBJ_PATH)gui.o: $(CBM_VIS_SRC_PATH)gui.cpp
	$(CXX) -c $(MODULE_CXX_FLAGS) $(CBM_VIS_INCLUDES) -o $(CBM_VIS_OBJ_PATH)gui.o $(CBM_VIS_SRC_PATH)gui.cpp

####### CXX Tools Compiler Options

CXX_TOOLS_INCLUDES = -I. -I$(CXX_TOOLS_INCLUDE_PATH)

####### CXX Tools Build Rules

$(CXX_TOOLS_OBJ_PATH):
	@$(CHK_DIR_EXISTS) $(CXX_TOOLS_OBJ_PATH) || $(MKDIR) $(CXX_TOOLS_OBJ_PATH)

####### Compile CXX Tools Sources

$(CXX_TOOLS_OBJ_PATH)commandline.o: $(CXX_TOOLS_SRC_PATH)commandLine/commandline.cpp $(CXX_TOOLS_INCLUDE_PATH)commandLine/commandline.h
	$(CXX) -c $(MODULE_CXX_FLAGS) $(CXX_TOOLS_INCLUDES) -o $(CXX_TOOLS_OBJ_PATH)commandline.o $(CXX_TOOLS_SRC_PATH)commandLine/commandline.cpp

$(CXX_TOOLS_OBJ_PATH)rawbytesrw.o: $(CXX_TOOLS_SRC_PATH)fileIO/rawbytesrw.cpp $(CXX_TOOLS_INCLUDE_PATH)fileIO/rawbytesrw.h
	$(CXX) -c $(MODULE_CXX_FLAGS) $(CXX_TOOLS_INCLUDES) -o $(CXX_TOOLS_OBJ_PATH)rawbytesrw.o $(CXX_TOOLS_SRC_PATH)fileIO/rawbytesrw.cpp

$(CXX_TOOLS_OBJ_PATH)build_file.o: $(CXX_TOOLS_SRC_PATH)fileIO/build_file.cpp $(CXX_TOOLS_INCLUDE_PATH)fileIO/build_file.h
	$(CXX) -c $(MODULE_CXX_FLAGS) $(CXX_TOOLS_INCLUDES) -o $(CXX_TOOLS_OBJ_PATH)build_file.o $(CXX_TOOLS_SRC_PATH)fileIO/build_file.cpp

$(CXX_TOOLS_OBJ_PATH)experiment_file.o: $(CXX_TOOLS_SRC_PATH)fileIO/experiment_file.cpp $(CXX_TOOLS_INCLUDE_PATH)fileIO/experiment_file.h
	$(CXX) -c $(MODULE_CXX_FLAGS) $(CXX_TOOLS_INCLUDES) -o $(CXX_TOOLS_OBJ_PATH)experiment_file.o $(CXX_TOOLS_SRC_PATH)fileIO/experiment_file.cpp

$(CXX_TOOLS_OBJ_PATH)arrayvalidate.o: $(CXX_TOOLS_SRC_PATH)memoryMgmt/arrayvalidate.cpp $(CXX_TOOLS_INCLUDE_PATH)memoryMgmt/arrayvalidate.h
	$(CXX) -c $(MODULE_CXX_FLAGS) $(CXX_TOOLS_INCLUDES) -o $(CXX_TOOLS_OBJ_PATH)arrayvalidate.o $(CXX_TOOLS_SRC_PATH)memoryMgmt/arrayvalidate.cpp

$(CXX_TOOLS_OBJ_PATH)mersenne.o: $(CXX_TOOLS_SRC_PATH)randGenerators/mersenne.cpp $(CXX_TOOLS_INCLUDE_PATH)randGenerators/randomc.h
	$(CXX) -c $(MODULE_CXX_FLAGS) $(CXX_TOOLS_INCLUDES) -o $(CXX_TOOLS_OBJ_PATH)mersenne.o $(CXX_TOOLS_SRC_PATH)randGenerators/mersenne.cpp

$(CXX_TOOLS_OBJ_PATH)mother.o: $(CXX_TOOLS_SRC_PATH)randGenerators/mother.cpp $(CXX_TOOLS_INCLUDE_PATH)randGenerators/randomc.h
	$(CXX) -c $(MODULE_CXX_FLAGS) $(CXX_TOOLS_INCLUDES) -o $(CXX_TOOLS_OBJ_PATH)mother.o $(CXX_TOOLS_SRC_PATH)randGenerators/mother.cpp

$(CXX_TOOLS_OBJ_PATH)sfmt.o: $(CXX_TOOLS_SRC_PATH)randGenerators/sfmt.cpp $(CXX_TOOLS_INCLUDE_PATH)randGenerators/sfmt.h \
		                     $(CXX_TOOLS_INCLUDE_PATH)randGenerators/randomc.h
	$(CXX) -c $(MODULE_CXX_FLAGS) $(CXX_TOOLS_INCLUDES) -o $(CXX_TOOLS_OBJ_PATH)sfmt.o $(CXX_TOOLS_SRC_PATH)randGenerators/sfmt.cpp

$(CXX_TOOLS_OBJ_PATH)tty.o: $(CXX_TOOLS_SRC_PATH)ttyManip/tty.cpp $(CXX_TOOLS_INCLUDE_PATH)ttyManip/tty.h
	$(CXX) -c $(MODULE_CXX_FLAGS) $(CXX_TOOLS_INCLUDES) -o $(CXX_TOOLS_OBJ_PATH)tty.o $(CXX_TOOLS_SRC_PATH)ttyManip/tty.cpp

# ============================================ CLEAN UP ALL ======================================

clean: 
	$(RM) $(CBM_CORE_OBJ_PATH)  
	$(RM) $(CBM_DATA_OBJ_PATH)  
	$(RM) $(CBM_STATE_OBJ_PATH)  
	$(RM) $(CBM_TOOLS_OBJ_PATH)  
	$(RM) $(CXX_TOOLS_OBJ_PATH)  
	$(RM) $(CBM_VIS_OBJ_PATH)
	$(RM) $(BIG_SIM_OBJ_PATH)      
	$(RM) $(TARGET)

check: first

