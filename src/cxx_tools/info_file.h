#ifndef _INFO_FILE_H
#define _INFO_FILE_H

#include "commandline.h"
#include "file_parse.h"
#include "file_utility.h"

const uint32_t TAB_WIDTH = 4;

const uint32_t HEADER_COL_1_WIDTH = 36;
const uint32_t HEADER_COL_2_WIDTH = 36;

const std::string RUN_START_DATE_LBL = "RUN START DATE";
const std::string RUN_START_TIME_LBL = "RUN START TIME";
const std::string RUN_END_DATE_LBL   = "RUN END DATE";
const std::string RUN_END_TIME_LBL   = "RUN END TIME";
const std::string CBM_SIM_VER_LBL    = "CBM SIM VERSION";
const std::string USERNAME_LBL       = "GENERATED BY";

const std::string CMD_LBL        = "COMMAND";
const std::string VIS_MODE_LBL   = "VISUAL MODE";
const std::string IN_FILE_LBL    = "INPUT FILE";
const std::string SESS_FILE_LBL  = "SESSION FILE";
const std::string OUT_FILE_LBL   = "OUTPUT FILE";
const std::string PFPC_PLAST_LBL = "PFPC PLASTICITY";
const std::string MFNC_PLAST_LBL = "MFNC PLASTICITY";

const uint32_t CMDLINE_SECTION_COL_1_WIDTH = 18;
const uint32_t CMDLINE_SECTION_COL_2_WIDTH = 57;

const std::string FILE_SAVE_LBL    = "FILES SAVED";
const std::string RAST_FILE_LBL    = "RASTER";
const std::string PSTH_FILE_LBL    = "PSTH";
const std::string WEIGHTS_FILE_LBL = "WEIGHTS";
const std::string PFPC_FILE_LBL    = "PFPC";
const std::string MFNC_FILE_LBL    = "MFNC";

const std::string TRIAL_DEFINE_LBL   = "DEFINED TRIALS";
const std::string BLOCK_DEFINE_LBL   = "DEFINED BLOCKS";
const std::string SESSION_DEFINE_LBL = "DEFINED SESSION";

enum when {BEFORE_RUN, AFTER_RUN};

typedef struct 
{
	std::string start_date;
	std::string end_date;
	std::string locale;
	std::string start_time;
	std::string end_time;
	std::string sim_version;
	std::string username;
	parsed_commandline p_cl;
	parsed_sess_file s_file;
} info_file_data;

void cp_to_info_file_data(parsed_commandline &p_cl, parsed_sess_file &s_file, info_file_data &if_data);
void set_info_file_str_props(enum when, info_file_data &if_data);

#endif /* _INFO_FILE_H */

